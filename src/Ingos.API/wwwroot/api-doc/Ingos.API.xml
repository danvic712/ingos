<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ingos.API</name>
    </assembly>
    <members>
        <member name="T:Ingos.API.Controllers.BaseController">
            <summary>
                Base controller
            </summary>
        </member>
        <member name="M:Ingos.API.Controllers.BaseController.#ctor">
            <summary>
                The base controller
            </summary>
        </member>
        <member name="T:Ingos.API.Controllers.v1.ApplicationsController">
            <summary>
                Applications
            </summary>
        </member>
        <member name="F:Ingos.API.Controllers.v1.ApplicationsController._appService">
            <summary>
            </summary>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ApplicationsController.#ctor(Ingos.Application.Contracts.ApplicationAggregates.IApplicationAppService)">
            <summary>
                ctor
            </summary>
            <param name="appService"></param>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ApplicationsController.GetApplications">
            <summary>
                Get all applications
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ApplicationsController.GetApplicationInfo(System.Guid)">
            <summary>
                Get specified application information
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ApplicationsController.CreateApplicationAsync(Ingos.Application.Contracts.ApplicationAggregates.Dtos.ApplicationCreationDto,System.Threading.CancellationToken)">
            <summary>
                Save a new application
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ApplicationsController.PublishApplication(System.Guid)">
            <summary>
                Publish a application
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ApplicationsController.OfflineApplication(System.Guid)">
            <summary>
                Offline a application
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ApplicationsController.ModifyApplication(System.Guid,System.String)">
            <summary>
                Modify a existed application information
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ApplicationsController.DeleteApplication(System.Guid)">
            <summary>
                Delete a existed application
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ingos.API.Controllers.v1.ServicesController">
            <summary>
                Services
            </summary>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ServicesController.GetServices">
            <summary>
                Get current application's all services
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ServicesController.GetServiceInfo(System.Guid)">
            <summary>
                Get specified service information
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ServicesController.SaveService(System.Guid,System.String)">
            <summary>
                Save a new service
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ServicesController.PublishService(System.Guid)">
            <summary>
                Publish a service
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ServicesController.OfflineService(System.Guid)">
            <summary>
                Offline a service
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ServicesController.ModifyService(System.Guid,System.String)">
            <summary>
                Modify a existed service information
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingos.API.Controllers.v1.ServicesController.DeleteService(System.Guid)">
            <summary>
                Delete a existed service
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ingos.API.Infrastructure.RemoveVersionFromParameter">
            <summary>
                Remove api version param from swagger doc
            </summary>
        </member>
        <member name="M:Ingos.API.Infrastructure.RemoveVersionFromParameter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
                Apply the filter rule
            </summary>
        </member>
        <member name="T:Ingos.API.IngosApiModule">
            <summary>
                Api module definition file
            </summary>
        </member>
        <member name="M:Ingos.API.IngosApiModule.PreConfigureServices(Volo.Abp.Modularity.ServiceConfigurationContext)">
            <summary>
                Pre configure before inject services into service collection
            </summary>
        </member>
        <member name="M:Ingos.API.IngosApiModule.ConfigureServices(Volo.Abp.Modularity.ServiceConfigurationContext)">
            <summary>
                Configure application services
            </summary>
        </member>
        <member name="M:Ingos.API.IngosApiModule.OnApplicationInitialization(Volo.Abp.ApplicationInitializationContext)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Ingos.API.IngosApiModule.GetApiDocPaths(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
                Get the api description doc path
            </summary>
            <param name="paths">The xml file path</param>
            <param name="basePath">The site's base running files path</param>
            <returns></returns>
        </member>
        <member name="T:Ingos.API.Program">
            <summary>
            </summary>
        </member>
        <member name="M:Ingos.API.Program.Main(System.String[])">
            <summary>
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Ingos.API.Startup">
            <summary>
                Application start up configuration
            </summary>
        </member>
        <member name="M:Ingos.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            </summary>
        </member>
        <member name="M:Ingos.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            </summary>
        </member>
    </members>
</doc>
